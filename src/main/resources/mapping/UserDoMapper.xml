<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.course_backend.dao.UserDoMapper">
    <resultMap id="BaseResultMap" type="com.shu.course_backend.model.entity.UserDo">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="education" property="education" jdbcType="VARCHAR"/>
        <result column="identity" property="identity" jdbcType="CHAR"/>
        <result column="mobile_phone" property="mobilePhone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="pending" property="pending" jdbcType="BIT"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id
        , name, gender, department_id, education, identity, mobile_phone, email, pending
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.shu.course_backend.model.entity.UserDoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from user_info
        where user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.shu.course_backend.model.entity.UserDoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.shu.course_backend.model.entity.UserDo">
        insert into user_info (user_id, name, gender,
                               department_id, education, identity,
                               mobile_phone, email, pending)
        values (#{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER},
                #{departmentId,jdbcType=INTEGER}, #{education,jdbcType=VARCHAR}, #{identity,jdbcType=CHAR},
                #{mobilePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{pending,jdbcType=BIT})
    </insert>
    <insert id="insertSelective" parameterType="com.shu.course_backend.model.entity.UserDo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="education != null">
                education,
            </if>
            <if test="identity != null">
                identity,
            </if>
            <if test="mobilePhone != null">
                mobile_phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="pending != null">
                pending,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="education != null">
                #{education,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                #{identity,jdbcType=CHAR},
            </if>
            <if test="mobilePhone != null">
                #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="pending != null">
                #{pending,jdbcType=BIT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.shu.course_backend.model.entity.UserDoExample"
            resultType="java.lang.Integer">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=INTEGER},
            </if>
            <if test="record.departmentId != null">
                department_id = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.education != null">
                education = #{record.education,jdbcType=VARCHAR},
            </if>
            <if test="record.identity != null">
                identity = #{record.identity,jdbcType=CHAR},
            </if>
            <if test="record.mobilePhone != null">
                mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.pending != null">
                pending = #{record.pending,jdbcType=BIT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set user_id = #{record.userId,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=INTEGER},
        department_id = #{record.departmentId,jdbcType=INTEGER},
        education = #{record.education,jdbcType=VARCHAR},
        identity = #{record.identity,jdbcType=CHAR},
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        pending = #{record.pending,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.shu.course_backend.model.entity.UserDo">
        update user_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="education != null">
                education = #{education,jdbcType=VARCHAR},
            </if>
            <if test="identity != null">
                identity = #{identity,jdbcType=CHAR},
            </if>
            <if test="mobilePhone != null">
                mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="pending != null">
                pending = #{pending,jdbcType=BIT},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shu.course_backend.model.entity.UserDo">
        update user_info
        set name          = #{name,jdbcType=VARCHAR},
            gender        = #{gender,jdbcType=INTEGER},
            department_id = #{departmentId,jdbcType=INTEGER},
            education     = #{education,jdbcType=VARCHAR},
            identity      = #{identity,jdbcType=CHAR},
            mobile_phone  = #{mobilePhone,jdbcType=VARCHAR},
            email         = #{email,jdbcType=VARCHAR},
            pending       = #{pending,jdbcType=BIT}
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
</mapper>