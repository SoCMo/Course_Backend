<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.course_backend.dao.ConstDoMapper">
    <resultMap id="BaseResultMap" type="com.shu.course_backend.model.entity.ConstDo">
        <id column="config_key" property="configKey" jdbcType="VARCHAR"/>
        <result column="config_value" property="configValue" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        config_key
        , config_value
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.shu.course_backend.model.entity.ConstDoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from const_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from const_info
        where config_key = #{configKey,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from const_info
        where config_key = #{configKey,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.shu.course_backend.model.entity.ConstDoExample">
        delete from const_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.shu.course_backend.model.entity.ConstDo">
        insert into const_info (config_key, config_value)
        values (#{configKey,jdbcType=VARCHAR}, #{configValue,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.shu.course_backend.model.entity.ConstDo">
        insert into const_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="configKey != null">
                config_key,
            </if>
            <if test="configValue != null">
                config_value,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="configKey != null">
                #{configKey,jdbcType=VARCHAR},
            </if>
            <if test="configValue != null">
                #{configValue,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.shu.course_backend.model.entity.ConstDoExample"
            resultType="java.lang.Integer">
        select count(*) from const_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update const_info
        <set>
            <if test="record.configKey != null">
                config_key = #{record.configKey,jdbcType=VARCHAR},
            </if>
            <if test="record.configValue != null">
                config_value = #{record.configValue,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update const_info
        set config_key = #{record.configKey,jdbcType=VARCHAR},
        config_value = #{record.configValue,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.shu.course_backend.model.entity.ConstDo">
        update const_info
        <set>
            <if test="configValue != null">
                config_value = #{configValue,jdbcType=VARCHAR},
            </if>
        </set>
        where config_key = #{configKey,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shu.course_backend.model.entity.ConstDo">
        update const_info
        set config_value = #{configValue,jdbcType=VARCHAR}
        where config_key = #{configKey,jdbcType=VARCHAR}
    </update>
</mapper>