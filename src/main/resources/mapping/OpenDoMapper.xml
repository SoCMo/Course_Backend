<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shu.course_backend.dao.OpenDoMapper">
    <resultMap id="BaseResultMap" type="com.shu.course_backend.model.entity.OpenDo">
        <id column="open_id" property="openId" jdbcType="INTEGER"/>
        <result column="teacher_id" property="teacherId" jdbcType="VARCHAR"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="semester" property="semester" jdbcType="VARCHAR"/>
        <result column="course_time_id" property="courseTimeId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        open_id
        , teacher_id, course_id, semester, course_time_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.shu.course_backend.model.entity.OpenDoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from open_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from open_info
        where open_id = #{openId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from open_info
        where open_id = #{openId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.shu.course_backend.model.entity.OpenDoExample">
        delete from open_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.shu.course_backend.model.entity.OpenDo">
        insert into open_info (open_id, teacher_id, course_id,
                               semester, course_time_id)
        values (#{openId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER},
                #{semester,jdbcType=VARCHAR}, #{courseTimeId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.shu.course_backend.model.entity.OpenDo">
        insert into open_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="openId != null">
                open_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="semester != null">
                semester,
            </if>
            <if test="courseTimeId != null">
                course_time_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="openId != null">
                #{openId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="semester != null">
                #{semester,jdbcType=VARCHAR},
            </if>
            <if test="courseTimeId != null">
                #{courseTimeId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.shu.course_backend.model.entity.OpenDoExample"
            resultType="java.lang.Integer">
        select count(*) from open_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update open_info
        <set>
            <if test="record.openId != null">
                open_id = #{record.openId,jdbcType=INTEGER},
            </if>
            <if test="record.teacherId != null">
                teacher_id = #{record.teacherId,jdbcType=VARCHAR},
            </if>
            <if test="record.courseId != null">
                course_id = #{record.courseId,jdbcType=INTEGER},
            </if>
            <if test="record.semester != null">
                semester = #{record.semester,jdbcType=VARCHAR},
            </if>
            <if test="record.courseTimeId != null">
                course_time_id = #{record.courseTimeId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update open_info
        set open_id = #{record.openId,jdbcType=INTEGER},
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
        course_id = #{record.courseId,jdbcType=INTEGER},
        semester = #{record.semester,jdbcType=VARCHAR},
        course_time_id = #{record.courseTimeId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.shu.course_backend.model.entity.OpenDo">
        update open_info
        <set>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="semester != null">
                semester = #{semester,jdbcType=VARCHAR},
            </if>
            <if test="courseTimeId != null">
                course_time_id = #{courseTimeId,jdbcType=INTEGER},
            </if>
        </set>
        where open_id = #{openId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shu.course_backend.model.entity.OpenDo">
        update open_info
        set teacher_id     = #{teacherId,jdbcType=VARCHAR},
            course_id      = #{courseId,jdbcType=INTEGER},
            semester       = #{semester,jdbcType=VARCHAR},
            course_time_id = #{courseTimeId,jdbcType=INTEGER}
        where open_id = #{openId,jdbcType=INTEGER}
    </update>
</mapper>